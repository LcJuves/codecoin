Greetings!

This workspace is in the process of being translated from C++ to Rust. 
Some function bodies are still in the process of translation. 
As such, the codebase is not yet ready for production use.  
However, it is still ready for experimentation and development collaboration.

After each function body is translated, the codebase will match commit
ab25ef8c7f767258d5fe44f53b35ad8bd51ed5cd from the C++ upstream.  

Once we have a match of ab25ef8c, we will patch until we match the C++ HEAD.

There is a way to distribute the C++ commit patches into the rust workspace crates such that we get a simple patch chain for each crate.
This is much less complicated than the application of the whole patch chain globally.

The inevitable goal is to fully match the C++ core in a modular, high performance rust workspace. 
If this goal resonates with you, I am grateful for your support on the way.  This can be in the form of development, testing, and feedback.

I am happy to take pull requests completing (and testing) the translation of one or more of these crates.

I am happy to provide crates.io ownership of any workspace crate whose translation arrives as a pull request from another developer in the community 
(The goal being to increase the distributed nature of project development).

I am happiest if the development of each crate provided here grows to become fully distributed.

I wrote a prototype C++ to rust transpiler which can translate C++ statements into rust. I don't mind letting it do most of the heavy lifting. 
However, it needs a performance upgrade in order to be practical.

There are auxiliary items I must attend before providing this performance upgrade.
It will be a few months at least before I get back to it.

If there are developers out there who are interested in collaborating in the meantime, I am happy to provide support and facilitate this endeavor.

I look forward to collectively battle testing this system so we can all integrate high performance bitcoin connectivity into the systems we write.

best,

-kleb
