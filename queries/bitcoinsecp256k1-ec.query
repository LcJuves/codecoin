hello! 

I am writing a rust crate called bitcoinsecp256k1-ec. 

It is one of the subcomponets of the bitcoin
system.

I would like you to help me write a rust crate
description for it.

Please write the description in the following
format:

<short description tag used in the crate header>
<double newline>
<longer, in depth description and possible mathematical analysis>
<END>

I would like you to include the following
`Notice` in some part of your response:

"This crate is part of a direct translation
from C++ to Rust of the bitcoin core. As such,
some of the function bodies may still be in
the process of translation. Please note that
this system will become testable once the
translation process is complete"

Below are listed the tokens from this crate. 

Please describe any mathematical ideas
associated with these tokens alongside the
relevant mathematical equations in unicode.

If there are no mathematical ideas associated
with these tokens, say nothing.

Do not say: "there are no mathematical ideas
associated with these tokens".

thanks!

please format your response in the Markdown
file format.

here are the tokens:
Secp256k1EcdsaSignature
ecdsa_sign
ecdsa_signature_load
ecdsa_signature_normalize
ecdsa_signature_parse_compact
ecdsa_signature_parse_der
ecdsa_signature_save
ecdsa_signature_serialize_compact
ecdsa_signature_serialize_der
ecdsa_verify
is
sig_has_lowr
EcMultGenContext
EcMultGenContextPrec
ecmult_gen
ecmult_gen_blind
ecmult_gen_context_build
ecmult_gen_context_clear
ecmult_gen_context_finalize_memcpy
ecmult_gen_context_init
ecmult_gen_context_is_built
ec_seckey_export_der
ec_seckey_import_der
eckey_privkey_tweak_add
eckey_privkey_tweak_mul
eckey_pubkey_parse
eckey_pubkey_serialize
eckey_pubkey_tweak_add
eckey_pubkey_tweak_mul
from
default_error_callback_fn
default_illegal_callback_fn
NonceFunction
EcdhHashFunction
ecdh
ecdh_hash_function_custom
ecdh_hash_function_sha256
ecdh_hash_function_test_fail
run_ecdh_tests
test_bad_scalar
test_ecdh_api
test_ecdh_generator_basepoint
ecmult_const
wnaf_const
EcMultContext
EcMultMultiCallback
EcMultMultiFunc
PippengerPointState
PippengerState
StraussPointState
StraussState
ecmult
ecmult_context_build
ecmult_context_clear
ecmult_context_finalize_memcpy
ecmult_context_init
ecmult_context_is_built
ecmult_endo_split
ecmult_multi_batch_size_helper
ecmult_multi_simple_var
ecmult_multi_var
ecmult_odd_multiples_table
ecmult_odd_multiples_table_globalz_windowa
ecmult_odd_multiples_table_storage_var
ecmult_pippenger_batch
ecmult_pippenger_batch_single
ecmult_pippenger_wnaf
ecmult_strauss_batch
ecmult_strauss_batch_single
ecmult_strauss_wnaf
ecmult_wnaf
pippenger_bucket_window
pippenger_bucket_window_inv
pippenger_max_points
pippenger_point_state
pippenger_scratch_size
pippenger_state
strauss_max_points
strauss_point_state
strauss_scratch_size
strauss_state
wnaf_fixed
der_parse_integer
der_read_len
ecdsa_sig_parse
ecdsa_sig_serialize
ecdsa_sig_sign
ecdsa_sig_verify
ecdsa_signature_parse_der_lax
Secp256k1Context
context_clone
context_create
context_destroy
context_preallocated_clone
context_preallocated_clone_size
context_preallocated_create
context_preallocated_destroy
context_preallocated_size
context_randomize
context_set_error_callback
context_set_illegal_callback
get_verify_context
