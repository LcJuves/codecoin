hello! 

I am writing a rust crate called bitcoinsecp256k1-scalar. 

It is one of the subcomponets of the bitcoin
system.

I would like you to help me write a rust crate
description for it.

Please write the description in the following
format:

<short description tag used in the crate header>
<double newline>
<longer, in depth description and possible mathematical analysis>
<END>

I would like you to include the following
`Notice` in some part of your response:

"This crate is part of a direct translation
from C++ to Rust of the bitcoin core. As such,
some of the function bodies may still be in
the process of translation. Please note that
this system will become testable once the
translation process is complete"

Below are listed the tokens from this crate. 

Please describe any mathematical ideas
associated with these tokens alongside the
relevant mathematical equations in unicode.

If there are no mathematical ideas associated
with these tokens, say nothing.

Do not say: "there are no mathematical ideas
associated with these tokens".

thanks!

please format your response in the Markdown
file format.

here are the tokens:
Scalar
scalar_add
scalar_cadd_bit
scalar_check_overflow
scalar_clear
scalar_cmov
scalar_cond_negate
scalar_eq
scalar_get_b32
scalar_get_bits
scalar_get_bits_var
scalar_inverse
scalar_inverse_var
scalar_is_even
scalar_is_high
scalar_is_one
scalar_is_zero
scalar_mul
scalar_negate
scalar_set_b32
scalar_set_int
scalar_shr_int
scalar_split_128
scalar_add
scalar_cadd_bit
scalar_clear
scalar_cmov
scalar_cond_negate
scalar_eq
scalar_get_b32
scalar_get_bits
scalar_get_bits_var
scalar_inverse
scalar_inverse_var
scalar_is_even
scalar_is_high
scalar_is_one
scalar_is_zero
scalar_mul
scalar_mul_shift_var
scalar_negate
scalar_set_b32
scalar_set_b32_seckey
scalar_set_int
scalar_shr_int
scalar_split_128
scalar_split_lambda_verify
Scalar
scalar_add
scalar_cadd_bit
scalar_check_overflow
scalar_clear
scalar_cmov
scalar_cond_negate
scalar_eq
scalar_from_signed30
scalar_get_b32
scalar_get_bits
scalar_get_bits_var
scalar_inverse
scalar_inverse_var
scalar_is_even
scalar_is_high
scalar_is_one
scalar_is_zero
scalar_mul
scalar_mul_512
scalar_mul_shift_var
scalar_negate
scalar_reduce
scalar_reduce_512
scalar_set_b32
scalar_set_int
scalar_shr_int
scalar_split_128
scalar_to_signed30
Scalar
scalar_add
scalar_cadd_bit
scalar_check_overflow
scalar_clear
scalar_cmov
scalar_cond_negate
scalar_eq
scalar_from_signed62
scalar_get_b32
scalar_get_bits
scalar_get_bits_var
scalar_inverse
scalar_inverse_var
scalar_is_even
scalar_is_high
scalar_is_one
scalar_is_zero
scalar_mul
scalar_mul_512
scalar_mul_shift_var
scalar_negate
scalar_reduce
scalar_reduce_512
scalar_set_b32
scalar_set_int
scalar_shr_int
scalar_split_128
scalar_to_signed62
scalar_split_lambda
